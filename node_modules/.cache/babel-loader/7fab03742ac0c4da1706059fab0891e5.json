{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Estudo\\\\react\\\\udemy8projetos\\\\gerenciador-tarefas-api-cliente\\\\src\\\\listar\\\\remover-tarefa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nfunction RemoverTarefa(props) {\n  _s();\n\n  const [exibirModal, setExibirModal] = useState(false);\n  const [exibirModalErro, setExibirModalErro] = useState(false);\n\n  function handleAbrirModal(event) {\n    // para evitar que abra navegação ou atualize a tela\n    event.preventDefault();\n    setExibirModal(true);\n  }\n\n  function handleFecharModal() {\n    setExibirModal(false);\n  }\n\n  function handleFecharModalErro() {\n    setExibirModalErro(false);\n  }\n\n  function handleRemoverTarefa(event) {\n    event.preventDefault();\n    const tarefasDb = localStorage['tarefas'];\n    let tarefas = tarefasDb ? JSON.parse(tarefasDb) : [];\n    /**ignora a tarefa que o id for igual a tarefa.id */\n\n    tarefas = tarefas.filter(tarefa => tarefa.id !== props.tarefa.id);\n    localStorage['tarefas'] = JSON.stringify(tarefas);\n    setExibirModal(false);\n    props.recarregarTarefas(true); //atualizar a listafem da tarefa atual\n  }\n  /**\r\n   * vamos usar o modal, então precisamos controlar sua visibilidade\r\n  */\n\n\n  return (\n    /*#__PURE__*/\n    //um elemento para encapsular -> elemento neutro\n    _jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-sm\",\n        variant: \"danger\",\n        onClick: handleAbrirModal,\n        \"data-testid\": \"btn-abrir-modal\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrashAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: exibirModal,\n        onHide: handleFecharModal,\n        \"data-testid\": \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Remover tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [\"Deseja realmente remover a tarefa?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: props.tarefa.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleRemoverTarefa,\n            \"data-testid\": \"btn-remover\",\n            children: \"Sim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            onClick: handleFecharModal,\n            \"data-testid\": \"btn-fechar-modal\",\n            children: \"N\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: exibirModalErro,\n        onHide: handleFecharModalErro,\n        \"data-testid\": \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Erro \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"Erro ao excluir tarefa, tente novamente em instantes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: handleFecharModalErro,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(RemoverTarefa, \"xN0Q0LkpcAwodNreBreSz4JyDhQ=\");\n\n_c = RemoverTarefa;\nRemoverTarefa.propTypes = {\n  tarefa: PropTypes.object.isRequired,\n  recarregarTarefas: PropTypes.func.isRequired //função obrigatório\n\n};\nexport default RemoverTarefa;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoverTarefa\");","map":{"version":3,"sources":["E:/Estudo/react/udemy8projetos/gerenciador-tarefas-api-cliente/src/listar/remover-tarefa.js"],"names":["React","useState","PropTypes","Modal","Button","FontAwesomeIcon","faTrashAlt","RemoverTarefa","props","exibirModal","setExibirModal","exibirModalErro","setExibirModalErro","handleAbrirModal","event","preventDefault","handleFecharModal","handleFecharModalErro","handleRemoverTarefa","tarefasDb","localStorage","tarefas","JSON","parse","filter","tarefa","id","stringify","recarregarTarefas","nome","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button }  from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction RemoverTarefa(props){\r\n\r\n\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n\r\n    function handleAbrirModal(event){\r\n        // para evitar que abra navegação ou atualize a tela\r\n        event.preventDefault();\r\n        setExibirModal(true);\r\n    }\r\n\r\n\r\n    function handleFecharModal(){\r\n        setExibirModal(false);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n    }\r\n\r\n    function handleRemoverTarefa(event){\r\n        event.preventDefault();\r\n        const tarefasDb = localStorage['tarefas'];\r\n        let tarefas = tarefasDb ? JSON.parse(tarefasDb) : [];\r\n        /**ignora a tarefa que o id for igual a tarefa.id */\r\n        tarefas = tarefas.filter(tarefa => tarefa.id !== props.tarefa.id);\r\n        \r\n\r\n        localStorage['tarefas'] = JSON.stringify(tarefas);\r\n        setExibirModal(false);\r\n        props.recarregarTarefas(true); //atualizar a listafem da tarefa atual\r\n    }\r\n\r\n    /**\r\n     * vamos usar o modal, então precisamos controlar sua visibilidade\r\n    */\r\n    return(\r\n        //um elemento para encapsular -> elemento neutro\r\n        <span >\r\n            <Button className=\"btn-sm\" variant=\"danger\" onClick={handleAbrirModal} data-testid=\"btn-abrir-modal\" >\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>\r\n            <Modal show={exibirModal} onHide={handleFecharModal} data-testid=\"modal\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Remover tarefa</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Deseja realmente remover a tarefa?\r\n                    <br/>\r\n                    <strong>{props.tarefa.nome}</strong>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleRemoverTarefa} data-testid=\"btn-remover\">\r\n                        Sim\r\n                    </Button>\r\n                    <Button variant=\"light\" onClick={handleFecharModal} data-testid=\"btn-fechar-modal\">\r\n                        Não\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={exibirModalErro} onHide={handleFecharModalErro} data-testid=\"modal\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Erro </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Erro ao excluir tarefa, tente novamente em instantes.\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"warning\" onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </span>\r\n    );\r\n\r\n}\r\n\r\n\r\nRemoverTarefa.propTypes= {\r\n    tarefa: PropTypes.object.isRequired,\r\n    recarregarTarefas: PropTypes.func.isRequired //função obrigatório\r\n\r\n}\r\n\r\nexport default RemoverTarefa;"]},"metadata":{},"sourceType":"module"}