{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Estudo\\\\react\\\\udemy8projetos\\\\gerenciador-tarefas-api-cliente\\\\src\\\\cadastrar\\\\cadastrar-tarefa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, FormLabel, Jumbotron, Modal } from 'react-bootstrap';\nimport { navigate, A } from 'hookrouter';\nimport Tarefa from '../models/tarefa.model';\nimport axios from 'axios';\n\nfunction CadastrarTarefa() {\n  _s();\n\n  const API_URL_LISTAR_TAREFAS = 'http://localhost:3001/gerenciador-tarefas';\n  const [tarefa, setTarefa] = useState('');\n  const [formValidado, setFormValidado] = useState(false);\n  const [exibeModal, setExibeModal] = useState(false);\n  const [exibeModalErro, setExibeModalErro] = useState(false); // function cadastrar(event){\n  //     event.preventDefault(); //inibir a atualização da página\n  //     setFormValidado(true)        ;\n  //     if(event.currentTarget.checkValidity() === true){\n  //         //obtém as tarefas\n  //         const tarefasDb = localStorage['tarefas'];\n  //         const tarefas = tarefasDb ? JSON.parse(tarefasDb) : [];\n  //         //persistir a tarefa\n  //         tarefas.push(new Tarefa(new Date().getTime(), tarefa, false));\n  //         localStorage['tarefas'] = JSON.stringify(tarefas);\n  //         setExibeModal(true);\n  //     }   \n  // }\n\n  async function cadastrar(event) {\n    event.preventDefault(); //inibir a atualização da página\n\n    setFormValidado(true);\n\n    if (event.currentTarget.checkValidity() === true) {\n      try {\n        const novaTarefa = new Tarefa(null, tarefa, false);\n      } catch (err) {}\n    }\n  }\n\n  function handleTxtTarefa(event) {\n    setTarefa(event.target.value);\n  }\n\n  function handleFecharModal(event) {\n    navigate('/');\n  }\n\n  function handleFecharModalErro(event) {\n    setExibeModalErro(false);\n    navigate('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \" Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        validated: formValidado,\n        noValidate: true,\n        onSubmit: cadastrar,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Digite a tarefa\",\n            minLength: \"5\",\n            maxLength: \"100\",\n            required: true,\n            value: tarefa,\n            onChange: handleTxtTarefa,\n            \"data-testid\": \"txt-tarefa\" //serve para a classe de teste\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"A tarefa deve conter ao menos 5 caracteres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            \"data-testid\": \"btn-cadastrar\",\n            children: \"Cadastrar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(A, {\n            href: \"/\",\n            className: \"btn btn-light\",\n            children: \" Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: exibeModal,\n        onHide: handleFecharModal,\n        \"data-testid\": \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Sucesso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"Tarefa adicionada com sucesso!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: handleFecharModal,\n            children: \"Continuar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: exibeModalErro,\n        onHide: handleFecharModalErro,\n        \"data-testid\": \"modalErro\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Erro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"Erro ao adicionar tarefa, tente novamente em instantes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: handleFecharModalErro,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CadastrarTarefa, \"w1wPzgZJuyASu/hzpOIALDjvkgo=\");\n\n_c = CadastrarTarefa;\nexport default CadastrarTarefa;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastrarTarefa\");","map":{"version":3,"sources":["E:/Estudo/react/udemy8projetos/gerenciador-tarefas-api-cliente/src/cadastrar/cadastrar-tarefa.js"],"names":["React","useState","Button","Form","FormLabel","Jumbotron","Modal","navigate","A","Tarefa","axios","CadastrarTarefa","API_URL_LISTAR_TAREFAS","tarefa","setTarefa","formValidado","setFormValidado","exibeModal","setExibeModal","exibeModalErro","setExibeModalErro","cadastrar","event","preventDefault","currentTarget","checkValidity","novaTarefa","err","handleTxtTarefa","target","value","handleFecharModal","handleFecharModalErro"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Button, Form, FormLabel, Jumbotron, Modal} from 'react-bootstrap';\r\nimport {navigate, A} from 'hookrouter';\r\nimport Tarefa from '../models/tarefa.model';\r\nimport axios from 'axios';\r\n\r\nfunction CadastrarTarefa() {\r\n\r\n    const API_URL_LISTAR_TAREFAS = 'http://localhost:3001/gerenciador-tarefas';\r\n\r\n\r\n    const [tarefa, setTarefa] = useState('');\r\n    const [formValidado, setFormValidado] = useState(false);\r\n    const [exibeModal, setExibeModal] = useState(false);\r\n    const [exibeModalErro, setExibeModalErro] = useState(false);\r\n\r\n\r\n    // function cadastrar(event){\r\n    //     event.preventDefault(); //inibir a atualização da página\r\n    //     setFormValidado(true)        ;\r\n    //     if(event.currentTarget.checkValidity() === true){\r\n    //         //obtém as tarefas\r\n    //         const tarefasDb = localStorage['tarefas'];\r\n    //         const tarefas = tarefasDb ? JSON.parse(tarefasDb) : [];\r\n\r\n    //         //persistir a tarefa\r\n    //         tarefas.push(new Tarefa(new Date().getTime(), tarefa, false));\r\n    //         localStorage['tarefas'] = JSON.stringify(tarefas);\r\n    //         setExibeModal(true);\r\n    //     }   \r\n    // }\r\n\r\n\r\n\r\n    async function cadastrar(event){\r\n        event.preventDefault(); //inibir a atualização da página\r\n        setFormValidado(true);\r\n        if(event.currentTarget.checkValidity() === true){\r\n            try{\r\n                const novaTarefa = new Tarefa(null, tarefa, false);\r\n\r\n            }catch(err){\r\n\r\n            }\r\n        }   \r\n    }\r\n\r\n\r\n    function handleTxtTarefa(event){\r\n        setTarefa(event.target.value);\r\n    }\r\n\r\n    function handleFecharModal(event){\r\n        navigate('/');\r\n    }\r\n\r\n\r\n    function handleFecharModalErro(event){\r\n        setExibeModalErro(false);\r\n        navigate('/');}\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-center\"> Cadastrar</h3>\r\n            <Jumbotron>\r\n                <Form validated={formValidado} noValidate onSubmit={cadastrar}>\r\n                    <Form.Group>\r\n                        <FormLabel>Tarefa</FormLabel>\r\n                        <Form.Control type=\"text\" placeholder=\"Digite a tarefa\"\r\n                            minLength=\"5\" maxLength=\"100\" required \r\n                            value={tarefa} \r\n                            onChange={handleTxtTarefa}\r\n                            data-testid=\"txt-tarefa\" //serve para a classe de teste\r\n                        />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        A tarefa deve conter ao menos 5 caracteres\r\n                    </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"text-center\">\r\n                        <Button variant=\"success\" type=\"submit\" data-testid=\"btn-cadastrar\">Cadastrar </Button>\r\n                        &nbsp;\r\n                        <A href=\"/\" className=\"btn btn-light\"> Voltar</A>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Modal show={exibeModal} onHide={handleFecharModal} data-testid=\"modal\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Sucesso</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Tarefa adicionada com sucesso!\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"success\" \r\n                        onClick={handleFecharModal}  >Continuar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={exibeModalErro} onHide={handleFecharModalErro} data-testid=\"modalErro\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Erro</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Erro ao adicionar tarefa, tente novamente em instantes\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"warning\" \r\n                        onClick={handleFecharModalErro}  >Fechar</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CadastrarTarefa;"]},"metadata":{},"sourceType":"module"}